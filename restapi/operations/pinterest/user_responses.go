// Code generated by go-swagger; DO NOT EDIT.

package pinterest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "pinterest-clone/models"
)

// UserOKCode is the HTTP code returned for type UserOK
const UserOKCode int = 200

/*UserOK a user

swagger:response userOK
*/
type UserOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewUserOK creates UserOK with default headers values
func NewUserOK() *UserOK {

	return &UserOK{}
}

// WithPayload adds the payload to the user o k response
func (o *UserOK) WithPayload(payload *models.User) *UserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user o k response
func (o *UserOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UserDefault error

swagger:response userDefault
*/
type UserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUserDefault creates UserDefault with default headers values
func NewUserDefault(code int) *UserDefault {
	if code <= 0 {
		code = 500
	}

	return &UserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user default response
func (o *UserDefault) WithStatusCode(code int) *UserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user default response
func (o *UserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user default response
func (o *UserDefault) WithPayload(payload *models.Error) *UserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user default response
func (o *UserDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
