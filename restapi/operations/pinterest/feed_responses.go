// Code generated by go-swagger; DO NOT EDIT.

package pinterest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "pinterest-clone/models"
)

// FeedOKCode is the HTTP code returned for type FeedOK
const FeedOKCode int = 200

/*FeedOK returns pin_amount (number) images for the user's home feed

swagger:response feedOK
*/
type FeedOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Pin `json:"body,omitempty"`
}

// NewFeedOK creates FeedOK with default headers values
func NewFeedOK() *FeedOK {

	return &FeedOK{}
}

// WithPayload adds the payload to the feed o k response
func (o *FeedOK) WithPayload(payload []*models.Pin) *FeedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the feed o k response
func (o *FeedOK) SetPayload(payload []*models.Pin) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FeedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Pin, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*FeedDefault generic error response

swagger:response feedDefault
*/
type FeedDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFeedDefault creates FeedDefault with default headers values
func NewFeedDefault(code int) *FeedDefault {
	if code <= 0 {
		code = 500
	}

	return &FeedDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the feed default response
func (o *FeedDefault) WithStatusCode(code int) *FeedDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the feed default response
func (o *FeedDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the feed default response
func (o *FeedDefault) WithPayload(payload *models.Error) *FeedDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the feed default response
func (o *FeedDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FeedDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
